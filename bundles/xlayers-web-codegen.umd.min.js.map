{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@xlayers/web-codegen/lib/web-context.service.ts","ng://@xlayers/web-codegen/lib/web-parser.service.ts","ng://@xlayers/web-codegen/lib/web-aggregator.service.ts","ng://@xlayers/web-codegen/lib/web-codegen.service.ts","ng://@xlayers/web-codegen/lib/web-codegen.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","WebContextService","layerService","textService","imageService","svgCodeGen","identify","current","includes","of","web","put","nextContext","clear","Injectable","args","providedIn","LayerService","TextService","ImageService","SvgCodeGenService","WebParserService","formatService","symbolService","cssCodeGen","webContext","compute","data","options","_class","walk","visit","_this","layers","forEach","layer","visitSymbol","force","visitContent","visitBitmap","visitText","visitShape","visitLayer","attributes","generateClassAttribute","name","symbolMaster","lookup","context","components","fileName","normalizeName","assetDir","className","FormatService","SymbolService","CssCodeGenService","WebAggregatorService","aggregate","kind","renderComponent","language","uri","componentDir","map","file","template","join","indent","openTag","renderAttributeTag","blockTagName","closeTag","lenght","tagName","jsx","xmlPrefix","tslib_1.__spread","bitmapTagName","textTagName","xmlNamespace","split","line","attributIndex","findIndex","attribute","startsWith","replace","WebCodeGenService","webParser","webAggretatorService","compileOptions","visitSymbolMaster","flatMap","mode","cssPrefix","WebCodeGenModule","NgModule","imports","CssCodeGenModule","SvgCodeGenModule","SketchLibModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ImageService, LayerService, TextService } from '@xlayers/sketch-lib';\r\nimport { SvgCodeGenService } from '@xlayers/svg-codegen';\r\n\r\nimport { WebCodeGenContext } from './web-codegen.d';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebContextService {\r\n  constructor(\r\n    private readonly layerService: LayerService,\r\n    private readonly textService: TextService,\r\n    private readonly imageService: ImageService,\r\n    private readonly svgCodeGen: SvgCodeGenService\r\n  ) {}\r\n\r\n  identify(current: SketchMSLayer) {\r\n    return (\r\n      this.imageService.identify(current) ||\r\n      this.textService.identify(current) ||\r\n      this.layerService.identify(current) ||\r\n      this.svgCodeGen.identify(current) ||\r\n      [\r\n        'oval',\r\n        'rect',\r\n        'rectangle',\r\n        'group',\r\n        'symbolMaster',\r\n        'shapeGroup'\r\n      ].includes(current._class as string)\r\n    );\r\n  }\r\n\r\n  of(current: SketchMSLayer) {\r\n    return (current as any).web;\r\n  }\r\n\r\n  put(current: SketchMSLayer, nextContext: WebCodeGenContext) {\r\n    (current as any).web = { ...this.of(current), ...nextContext };\r\n  }\r\n\r\n  clear(current: SketchMSLayer) {\r\n    delete (current as any).web;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CssCodeGenService } from '@xlayers/css-codegen';\r\nimport {\r\n  FormatService,\r\n  ImageService,\r\n  LayerService,\r\n  SymbolService\r\n} from '@xlayers/sketch-lib';\r\nimport { TextService } from '@xlayers/sketch-lib';\r\nimport { SvgCodeGenService } from '@xlayers/svg-codegen';\r\n\r\nimport { WebCodeGenOptions } from './web-codegen.d';\r\nimport { WebContextService } from './web-context.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebParserService {\r\n  constructor(\r\n    private readonly textService: TextService,\r\n    private readonly formatService: FormatService,\r\n    private readonly symbolService: SymbolService,\r\n    private readonly imageService: ImageService,\r\n    private readonly layerService: LayerService,\r\n    private readonly cssCodeGen: CssCodeGenService,\r\n    private readonly svgCodeGen: SvgCodeGenService,\r\n    private readonly webContext: WebContextService\r\n  ) {}\r\n\r\n  compute(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    this.svgCodeGen.compute(current, data, options);\r\n    this.cssCodeGen.compute(current, data, options);\r\n    if (current._class === 'page') {\r\n      this.walk(current, data, options);\r\n    } else {\r\n      this.visit(current, data, options);\r\n    }\r\n  }\r\n\r\n  private walk(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    if (this.layerService.identify(current)) {\r\n      current.layers.forEach(layer => {\r\n        this.visit(layer, data, options);\r\n      });\r\n    } else if (this.symbolService.identify(current)) {\r\n      this.visitSymbol(current, data, options);\r\n    }\r\n  }\r\n\r\n  private visit(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    if (options.force) {\r\n      this.webContext.clear(current);\r\n    }\r\n    if (this.webContext.identify(current)) {\r\n      if (!this.webContext.of(current)) {\r\n        this.visitContent(current, options);\r\n      }\r\n    }\r\n    this.walk(current, data, options);\r\n  }\r\n\r\n  private visitContent(current: SketchMSLayer, options: WebCodeGenOptions) {\r\n    if (this.imageService.identify(current)) {\r\n      this.visitBitmap(current, options);\r\n    } else if (this.textService.identify(current)) {\r\n      this.visitText(current);\r\n    } else if (this.svgCodeGen.identify(current)) {\r\n      this.visitShape(current);\r\n    } else {\r\n      this.visitLayer(current, options);\r\n    }\r\n  }\r\n\r\n  private visitLayer(current: SketchMSLayer, options: WebCodeGenOptions) {\r\n    this.webContext.put(current, {\r\n      attributes: [\r\n        ...this.generateClassAttribute(current),\r\n        `role=\"${current._class}\"`,\r\n        `aria-label=\"${current.name}\"`\r\n      ]\r\n    });\r\n  }\r\n\r\n  private visitSymbol(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const symbolMaster = this.symbolService.lookup(current, data);\r\n    if (symbolMaster) {\r\n      this.compute(symbolMaster, data, options);\r\n      const context = this.webContext.of(current);\r\n      this.webContext.put(current, {\r\n        components:\r\n          context && context.components\r\n            ? [...context.components, current.name]\r\n            : [current.name]\r\n      });\r\n    }\r\n  }\r\n\r\n  private visitBitmap(current: SketchMSLayer, options: WebCodeGenOptions) {\r\n    const fileName = this.formatService.normalizeName(current.name);\r\n    this.webContext.put(current, {\r\n      attributes: [\r\n        ...this.generateClassAttribute(current),\r\n        `role=\"${current._class}\"`,\r\n        `aria-label=\"${current.name}\"`,\r\n        `src=\"/${options.assetDir}/${fileName}.png\"`\r\n      ]\r\n    });\r\n  }\r\n\r\n  private visitText(current: SketchMSLayer) {\r\n    this.webContext.put(current, {\r\n      attributes: this.generateClassAttribute(current)\r\n    });\r\n  }\r\n\r\n  private visitShape(current: SketchMSLayer) {\r\n    this.webContext.put(current, {\r\n      attributes: this.generateClassAttribute(current)\r\n    });\r\n  }\r\n\r\n  private generateClassAttribute(current: SketchMSLayer) {\r\n    if (this.cssCodeGen.identify(current)) {\r\n      const className = this.cssCodeGen.context(current).className;\r\n      if (className) {\r\n        return [`class=\"${className}\"`];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  FormatService,\r\n  SymbolService,\r\n  LayerService,\r\n  ImageService,\r\n  TextService\r\n} from '@xlayers/sketch-lib';\r\nimport { WebContextService } from './web-context.service';\r\nimport { WebCodeGenOptions } from './web-codegen';\r\nimport { CssCodeGenService } from '@xlayers/css-codegen';\r\nimport { SvgCodeGenService } from '@xlayers/svg-codegen';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebAggregatorService {\r\n  constructor(\r\n    private readonly textService: TextService,\r\n    private readonly symbolService: SymbolService,\r\n    private readonly imageService: ImageService,\r\n    private readonly formatService: FormatService,\r\n    private readonly layerService: LayerService,\r\n    private readonly webContext: WebContextService,\r\n    private readonly cssCodeGen: CssCodeGenService,\r\n    private readonly svgCodeGen: SvgCodeGenService\r\n  ) { }\r\n\r\n  aggregate(current: SketchMSLayer, options: WebCodeGenOptions) {\r\n    const fileName = this.formatService.normalizeName(current.name);\r\n    return [\r\n      {\r\n        kind: 'web',\r\n        value: this.renderComponent(current, options),\r\n        language: 'html',\r\n        uri: `${options.componentDir}/${fileName}.html`\r\n      },\r\n      ...this.cssCodeGen.aggregate(current, options).map(file => ({\r\n        ...file,\r\n        kind: 'web'\r\n      }))\r\n    ];\r\n  }\r\n\r\n  private renderComponent(current: SketchMSLayer, options: WebCodeGenOptions) {\r\n    const template = [];\r\n\r\n    if (current._class === 'page') {\r\n      this.walk(current, template, 0, options);\r\n    } else {\r\n      this.visit(current, template, 0, options);\r\n    }\r\n\r\n    return template.join('\\n');\r\n  }\r\n\r\n  private walk(\r\n    current: SketchMSLayer,\r\n    template: string[],\r\n    indent: number,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    if (this.layerService.identify(current)) {\r\n      current.layers.forEach(layer => {\r\n        this.visit(layer, template, indent, options);\r\n      });\r\n    }\r\n  }\r\n\r\n  private visit(\r\n    current: SketchMSLayer,\r\n    template: string[],\r\n    indent: number,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    if (this.symbolService.identify(current)) {\r\n      this.visitSymbol(current, template, indent, options);\r\n    } else if (this.imageService.identify(current)) {\r\n      this.visitBitmap(current, template, indent, options);\r\n    } else if (this.textService.identify(current)) {\r\n      this.visitText(current, template, indent, options);\r\n    } else if (this.svgCodeGen.identify(current)) {\r\n      this.visitShape(current, template, indent, options);\r\n    } else if (this.webContext.identify(current)) {\r\n      this.visitLayer(current, template, indent, options);\r\n    }\r\n  }\r\n\r\n  private visitLayer(\r\n    current: SketchMSLayer,\r\n    template: string[],\r\n    indent: number,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const openTag = this.renderAttributeTag(\r\n      current,\r\n      options.blockTagName,\r\n      options\r\n    );\r\n    const closeTag = `</${options.blockTagName}>`;\r\n\r\n    template.push(this.formatService.indent(indent, openTag));\r\n    this.walk(current, template, indent + 1, options);\r\n    template.push(this.formatService.indent(indent, closeTag));\r\n  }\r\n\r\n  private visitSymbol(\r\n    current: SketchMSLayer,\r\n    template: string[],\r\n    indent: number,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const context = this.webContext.of(current);\r\n    if (context && context.components && context.components.lenght > 1) {\r\n      const tagName = options.jsx\r\n        ? this.formatService.className(current.name)\r\n        : `${options.xmlPrefix}${this.formatService.normalizeName(\r\n          current.name\r\n        )}`;\r\n      template.push(\r\n        this.formatService.indent(indent, `<${tagName}></${tagName}>`)\r\n      );\r\n    }\r\n  }\r\n\r\n  private visitBitmap(\r\n    current: SketchMSLayer,\r\n    template: string[],\r\n    indent: number,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const attributes = this.webContext.of(current).attributes;\r\n    template.push(\r\n      this.formatService.indent(\r\n        indent,\r\n        [`<${options.bitmapTagName}`, ...attributes].join(' ') + ' />'\r\n      )\r\n    );\r\n  }\r\n\r\n  private visitText(\r\n    current: SketchMSLayer,\r\n    template: string[],\r\n    indent: number,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    template.push(\r\n      this.formatService.indent(\r\n        indent,\r\n        [\r\n          this.renderAttributeTag(current, options.textTagName, options),\r\n          this.textService.lookup(current),\r\n          `</${options.textTagName}>`\r\n        ].join('')\r\n      )\r\n    );\r\n  }\r\n\r\n  private visitShape(\r\n    current: SketchMSLayer,\r\n    template: string[],\r\n    indent: number,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    template.push(\r\n      this.formatService.indent(\r\n        indent,\r\n        this.renderAttributeTag(current, options.blockTagName, options)\r\n      )\r\n    );\r\n    template.push(\r\n      this.svgCodeGen\r\n        .aggregate(current, { xmlNamespace: false })\r\n        .map(file =>\r\n          file.value\r\n            .split('\\n')\r\n            .map(line => this.formatService.indent(indent + 1, line))\r\n            .join('\\n')\r\n        )\r\n        .join('\\n')\r\n    );\r\n    template.push(\r\n      this.formatService.indent(indent, `</${options.blockTagName}>`)\r\n    );\r\n  }\r\n\r\n  private renderAttributeTag(\r\n    current: SketchMSLayer,\r\n    tagName: string,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const attributes = this.webContext.of(current).attributes;\r\n    if (options.jsx) {\r\n      const attributIndex = attributes.findIndex(attribute =>\r\n        attribute.startsWith('class=')\r\n      );\r\n      if (attributIndex > 0) {\r\n        attributes[attributIndex] = attributes[attributIndex].replace(\r\n          'class=',\r\n          'className='\r\n        );\r\n      }\r\n    }\r\n    return [`<${tagName}`, ...attributes].join(' ') + '>';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ImageService, SymbolService, LayerService } from '@xlayers/sketch-lib';\r\nimport { WebContextService } from './web-context.service';\r\nimport { WebParserService } from './web-parser.service';\r\nimport { WebAggregatorService } from './web-aggregator.service';\r\nimport { WebCodeGenOptions } from './web-codegen.d';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebCodeGenService {\r\n  constructor(\r\n    private readonly symbolService: SymbolService,\r\n    private readonly imageService: ImageService,\r\n    private readonly webContext: WebContextService,\r\n    private readonly webParser: WebParserService,\r\n    private readonly webAggretatorService: WebAggregatorService,\r\n    private readonly layerService: LayerService\r\n  ) {}\r\n\r\n  compute(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    this.webParser.compute(current, data, this.compileOptions(options));\r\n  }\r\n\r\n  aggregate(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    return this.visit(current, data, this.compileOptions(options));\r\n  }\r\n\r\n  identify(current: SketchMSLayer) {\r\n    return this.webContext.identify(current);\r\n  }\r\n\r\n  context(current: SketchMSLayer) {\r\n    return this.webContext.of(current);\r\n  }\r\n\r\n  private visit(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options?: WebCodeGenOptions\r\n  ) {\r\n    return this.visitContent(current, data, options).concat(\r\n      this.webAggretatorService.aggregate(current, options)\r\n    );\r\n  }\r\n\r\n  private visitContent(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    if (this.layerService.identify(current)) {\r\n      return this.visitLayer(current, data, options);\r\n    } else if (this.symbolService.identify(current)) {\r\n      return this.visitSymbolMaster(current, data, options);\r\n    } else if (this.imageService.identify(current)) {\r\n      return this.imageService.aggregate(current, data, options);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private visitLayer(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    return this.layerService\r\n      .lookup(current)\r\n      .flatMap(layer => this.visitContent(layer, data, options));\r\n  }\r\n\r\n  private visitSymbolMaster(\r\n    current: SketchMSLayer,\r\n    data: SketchMSData,\r\n    options: WebCodeGenOptions\r\n  ) {\r\n    const symbolMaster = this.symbolService.lookup(current, data);\r\n    if (symbolMaster) {\r\n      return this.visit(symbolMaster, data, options);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  private compileOptions(options: WebCodeGenOptions) {\r\n    return {\r\n      textTagName: 'span',\r\n      bitmapTagName: 'img',\r\n      blockTagName: 'div',\r\n      mode: 'web',\r\n      jsx: false,\r\n      xmlPrefix: 'xly-',\r\n      cssPrefix: 'xly_',\r\n      componentDir: 'components',\r\n      assetDir: 'assets',\r\n      ...options\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CssCodeGenModule } from '@xlayers/css-codegen';\r\nimport { SketchLibModule } from '@xlayers/sketch-lib';\r\nimport { SvgCodeGenModule } from '@xlayers/svg-codegen';\r\n\r\n@NgModule({\r\n  imports: [CssCodeGenModule, SvgCodeGenModule, SketchLibModule]\r\n})\r\nexport class WebCodeGenModule {}\r\n"]}